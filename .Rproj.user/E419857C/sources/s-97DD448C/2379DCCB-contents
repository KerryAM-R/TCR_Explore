index <- read.csv("test-data/Index/colouring column2021.09.08.csv")
validate(
  need(nrow(index)>0,
       "Upload file")
)

index <- as.data.frame(index)
y_lable1 <- bquote(.("CD38"))
x_lable1 <-  bquote(.("input$x.axis2"))

index[is.na(index)] <- "not_clonal"

selected.col <- index[names(index) %in% "group"]
names(selected.col) <- "V1"
index[names(index) %in% "group"] <- factor(selected.col$V1, levels = unique(selected.col$V1),labels = unique(selected.col$V1))



palette.complex <- unlist(colors.FACS.index())
shape.ggplot <- unlist(shape.FACS.index2())
size.ggplot <- unlist(size.FACS.index2())
alpha.ggplot <- as.numeric(unlist(c(1,1,0.75)))


selected.col.unique <- unique(index[names(index) %in% "group"])

df.2 <- cbind(selected.col.unique,alpha.ggplot)
df.2
names(df.2) <- c("V1","alpha.dot")

index <- merge(df.2,index,by.x="V1",by.y='group')

head(index)

vals15$complex_dot <- ggplot(index, aes(x=get(input$x.axis2), y=get(input$y.axis2),
                                        colour = get(input$group_complex_dot),
                                        shape = get(input$group_complex_dot), 
                                        size  = get(input$group_complex_dot),
                                        alpha = index$alpha.dot
                                        
)


)+
  geom_point() +
  scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
                limits = c(1,10^input$max.x),
                labels = trans_format("log10", math_format(10^.x))) +
  scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
                limits = c(1,10^input$max.y),
                labels = trans_format("log10", math_format(10^.x))) +
  theme_bw() +
  scale_color_manual(values=palette.complex) + 
  scale_shape_manual(values=shape.ggplot)+
  scale_size_manual(values=size.ggplot)+
  # scale_alpha_manual(values=alpha.ggplot)+
  geom_hline(yintercept = input$yintercept,colour=input$intercept.col)+
  geom_vline(xintercept = input$xintercept,colour=input$intercept.col)+
  annotation_logticks()  +
  theme(text=element_text(size=20,family="serif"),
        axis.text.x = element_text(colour="black",size=input$axis.numeric.size,angle=0,hjust=.5,vjust=.5,face="plain",family="serif"),
        axis.text.y = element_text(colour="black",size=input$axis.numeric.size,angle=0,hjust=1,vjust=0,face="plain",family="serif"),
        axis.title.x=element_text(colour="black",size=input$axis.title.size,angle=0,hjust=.5,vjust=.5,face="plain",family="serif"),
        axis.title.y = element_text(colour="black",size=input$axis.title.size,angle=90,hjust=.5,vjust=.5,face="plain",family="serif"),
        legend.title  =element_blank(),
        legend.position = input$legend.dot,
        legend.text = element_text(colour="black",size=input$legend.size.cd,hjust=.5,vjust=.5,face="plain",family="serif")) +
  scale_alpha(guide = 'none') +
  guides(size=FALSE, col = guide_legend(ncol=input$legend.column))+
  labs(x=x_lable1,
       y=y_lable1)

vals15$complex_dot